@using Sandbox.UI;

@namespace Dxura.Darkrp.UI
@inherits Panel

@attribute [StyleSheet]

<root class="@(IsActive ? "visible" : "hidden")">
    <div class="main">
       <div class="side-bar">
          <div class="player-container">
             <div class="name">@PlayerState.Local?.DisplayName</div>
             <Balance></Balance>
             <div class="sub">Salary: <span>$@(PlayerState.Local?.Job.Salary ?? 0)</span></div>
          </div>
          <div class="navigation">
             
	          <div class="button-container">
		          <button class="button @(SelectedSection == MenuSection.Overview ? "active" : "")" @onclick="@(() => SetSelectedSection(MenuSection.Overview))">
			          <i class="icon">home</i> Overview
		          </button>
		          <button class="button @( SelectedSection == MenuSection.Jobs ? "active" : "" )" @onclick="@( () => SetSelectedSection( MenuSection.Jobs ) )">
			          <i class="icon">work</i> Jobs
		          </button>
		          <button class="button @( SelectedSection == MenuSection.Market ? "active" : "" )" @onclick="@( () => SetSelectedSection( MenuSection.Market ) )">
			          <i class="icon">store</i> Market
		          </button>
		          <button class="button @( SelectedSection == MenuSection.Props ? "active" : "" )" @onclick="@( () => SetSelectedSection( MenuSection.Props ) )">
			          <i class="icon">folder</i> Props
		          </button>
	          </div>

	          <div class="button-container">
		          @if ( Networking.IsHost )
		          {
			          <button class="button @( SelectedSection == MenuSection.Admin ? "active" : "" )" @onclick="@( () => SetSelectedSection( MenuSection.Admin ) )">
				          <i class="icon">local_police</i> Admin
			          </button>
		          }
	          </div>
          </div>
       </div>
       
       <div class="main-container">
          <div class="section">
             <div class="section-title">@SelectedSection</div>
             <div class="section-contents">
                
                @switch ( SelectedSection )
                {
	                case MenuSection.Overview:
		                <OverviewMenuSection></OverviewMenuSection>
		                break;
                   case MenuSection.Jobs:
                      <JobMenuSection></JobMenuSection>
                      break;
                   case MenuSection.Market:
		                <MarketMenuSection></MarketMenuSection>
	                   break;
                   case MenuSection.Props:
		                <PropsMenuSection></PropsMenuSection>
	                   break;
                   case MenuSection.Admin:
		                <AdminMenuSection></AdminMenuSection>
	                   break;
                }
             </div>
          </div>
       </div>
    </div>
</root>

@code
{
	enum MenuSection
    {
       Overview,
       Jobs,
       Market,
       Props,
       Admin
    }

    private MenuSection SelectedSection { get; set; } = MenuSection.Overview;
    private bool IsActive { get; set; }
    
    public override void Tick()
    {
	    
	    // Hide when deead
	    if ( IsActive && (PlayerState.Local?.Player == null || PlayerState.Local.Player.HealthComponent.State == LifeState.Dead))
	    {
		    IsActive = false;
		    StateHasChanged();
	    }
	    
       if ( Input.Pressed( "Menu" ) )
       {
          IsActive = !IsActive;
          StateHasChanged();
       }
    }

    private void SetSelectedSection(MenuSection section)
    {
        SelectedSection = section;
        StateHasChanged();
    }

    protected override int BuildHash()
    {
       return HashCode.Combine( SelectedSection );
    }
}
